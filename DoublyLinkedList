package LinkedList;

class DoublyLinkedList<E>{
    private class Node{
        E data;
        Node prev, next;
        
        Node(E data){
            this.data=data;
        }
    }
    
    private Node head, tail;
    private int size=0;
    
    public void addLast(E data){
        Node newNode= new Node(data);
        if(head==null){
            head=tail=newNode;
        }else{
            tail.next=newNode;
            newNode.prev=tail;
            tail=newNode;
        }
        size++;
    }
    public void addFirst(E data){
        Node newNode=new Node(data);
        if(head==null){
            head=tail=newNode;
        }else{
            newNode.next=head;
            head.prev=newNode;
            head=newNode;
        }
        size++;
    }
    public E removeLast(){
        if(tail==null)return null;
        E data=tail.data;
        tail=tail.prev;
        if(tail!=null)tail.next=null;
        else head=null;
        size--;
        return data;
    }
    public E removeFirst(){
        if(head==null)return null;
        E data=head.data;
        head=head.next;
        if(head!=null)head.prev=null;
        else tail=null;
        size--;
        return data;
    }
    public int size(){
        return size;
    }
    public void displayForward(){
        Node current=head;
        while(current!=null){
            System.out.print(current.data + " <-> ");
            current=current.next;
        }
        System.out.println("null");
    }
    public void displayBackward(){
        Node current=tail;
        while(current!=null){
            System.out.print(current.data + " <-> ");
            current=current.prev;
        }
        System.out.println("null");
    }
}

public class LinkedList {

    public static void main(String[] args) {
        DoublyLinkedList<Integer> dll = new DoublyLinkedList<>();
        dll.addLast(10);
        dll.addLast(20);
        dll.addLast(30);
        dll.addFirst(40);
        dll.displayForward();
        dll.displayBackward();
        dll.removeLast();
        dll.displayForward();
        dll.removeFirst();
        dll.displayForward();
    }
    
}
