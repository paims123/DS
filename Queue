package testmyqueue;

import java.util.LinkedList;
import java.util.*;

class MyQueue<E>{
    private LinkedList<E> list = new LinkedList<>();
    
    public MyQueue(E[] e){
        for(E item: e){
            enqueue(item);
        }
    }
    
    public MyQueue(){
    }
    public void enqueue(E e){
        list.addLast(e);
    }
    public E dequeue(){
        return list.pollFirst();
    }
    public E getElement(int i){
        return list.get(i);
    }
    public E peek(){
        return list.peekFirst();
    }
    public int getSize(){
        return list.size();
    }
    public boolean contains(E e){
        return list.contains(e);
    }
    public boolean isEmpty(){
        return list.isEmpty();
    }
    public String toString(){
        return list.toString();
    }
}

public class TestMyQueue {

    public static boolean isPalindrome(String s){
        Queue<Character> queue = new LinkedList<>();
        Stack<Character> stack = new Stack<>();
        
        s=s.replaceAll("[^a-zA-Z0-9]", "").toLowerCase();
        
        for(char c: s.toCharArray()){
            queue.add(c);
            stack.push(c);
        }
        while(!queue.isEmpty()){
            if(!queue.remove().equals(stack.pop())){
                return false;
            }
        }
        return true;
    }
    
    public static void main(String[] args) {
        String[] initialFruits= {"Durian", "Blueberry"};
        MyQueue<String> fruitQ=new MyQueue<>(initialFruits);
        
        fruitQ.enqueue("Apple");
        fruitQ.enqueue("Orange");
        fruitQ.enqueue("Grapes");
        fruitQ.enqueue("Cherry");
        
        System.out.println("Queue: "+fruitQ);
        System.out.println("Top item: "+fruitQ.peek());
        System.out.println("Queue size: "+fruitQ.getSize());
        
        while(fruitQ.contains("Durian")){
            fruitQ.dequeue();
        }
        System.out.println("After removing Durian: "+fruitQ);
        System.out.println("Element at index 2: "+fruitQ.getElement(2));
        System.out.println("Contains Cherry? "+fruitQ.contains("Cherry"));
        System.out.println("Contains Durian? "+fruitQ.contains("Durian"));
        
        if(!fruitQ.isEmpty()){
            System.out.println("Queue is not empty: "+fruitQ);
        }else{
            System.out.println("Queue is empty");
        }
        
        //Q2 Palindrome
        String input = "Racecar";
        System.out.println("Is \""+input+"\" a palindrome?" +isPalindrome(input));
    }
    
}
