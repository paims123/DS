package teststorepairgeneric;

// StorePairGeneric.java
class StorePairGeneric<T extends Comparable<T>> implements Comparable<StorePairGeneric<T>> {
    private T first, second;

    public StorePairGeneric(T first, T second) {
        this.first = first;
        this.second = second;
    }

    public T getFirst() {
        return first;
    }

    public T getSecond() {
        return second;
    }

    public void setPair(T first, T second) {
        this.first = first;
        this.second = second;
    }

    @Override
    public String toString() {
        return "first = " + first + " second = " + second;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof StorePairGeneric) {
            StorePairGeneric<?> other = (StorePairGeneric<?>) obj;
            return this.first.equals(other.getFirst());
        }
        return false;
    }

    @Override
    public int compareTo(StorePairGeneric<T> other) {
        return this.first.compareTo(other.getFirst());
    }
}


public class TestStorePairGeneric {

    public static void main(String[] args) {
        StorePairGeneric<Integer> a = new StorePairGeneric<>(6, 4);
        StorePairGeneric<Integer> b = new StorePairGeneric<>(2, 2);
        StorePairGeneric<Integer> c = new StorePairGeneric<>(6, 3);

        System.out.println("a.equals(b): " + a.equals(b)); // false
        System.out.println("a.equals(c): " + a.equals(c)); // true

        System.out.println("a.compareTo(b): " + a.compareTo(b)); // >0
        System.out.println("a.compareTo(c): " + a.compareTo(c)); // 0
    }
}
