package recursionlab;

public class RecursionLab {
    
    // 1. Substitute 'a' with 'i' recursively
    public static String substituteAI(String str) {
        if (str.isEmpty()) {
            return str;
        }
        char firstChar = str.charAt(0);
        if (firstChar == 'a') {
            return 'i' + substituteAI(str.substring(1));
        } else {
            return firstChar + substituteAI(str.substring(1));
        }
    }

    // 2. String Permutations recursively
    public static void permuteString(String str) {
        permuteStringHelper("", str);
    }

    private static void permuteStringHelper(String prefix, String remaining) {
        if (remaining.length() == 0) {
            System.out.println(prefix);
            return;
        }
        for (int i = 0; i < remaining.length(); i++) {
            char ch = remaining.charAt(i);
            String newPrefix = prefix + ch;
            String newRemaining = remaining.substring(0, i) + remaining.substring(i + 1);
            permuteStringHelper(newPrefix, newRemaining);
        }
    }

    // 3. Recursive Exponentiation
    public static long exponent(int x, int y) {
        if (y == 0) {
            return 1;
        }
        return x * exponent(x, y - 1);
    }
    
    public static void main(String[] args) {
        System.out.println("Testing substituteAI():");
        System.out.println("flabbergasted -> " + substituteAI("flabbergasted"));
        System.out.println("Astronaut -> " + substituteAI("Astronaut"));
        System.out.println("banana -> " + substituteAI("banana"));
        System.out.println("NoAsHere -> " + substituteAI("NoAsHere"));
        System.out.println();

        System.out.println("Testing permuteString():");
        System.out.println("Permutations of ABC:");
        permuteString("ABC");
        System.out.println("\nPermutations of XY:");
        permuteString("XY");
        System.out.println("\nPermutations of 1:");
        permuteString("1");
        System.out.println();

        System.out.println("Testing exponent():");
        System.out.println("10^3 = " + exponent(10, 3));
        System.out.println("2^5 = " + exponent(2, 5));
        System.out.println("5^0 = " + exponent(5, 0));
        System.out.println("3^1 = " + exponent(3, 1));
    }
}
